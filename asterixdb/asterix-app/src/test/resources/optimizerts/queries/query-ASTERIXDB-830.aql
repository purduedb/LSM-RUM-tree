/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

drop dataverse test if exists;
create dataverse test;

use dataverse test;

create type TweetMetadataType as {
  id : string
}

create dataset TweetMetadata(TweetMetadataType) primary key id;

for $m in dataset TweetMetadata
let $p := $m.gender.MaleProb
let $s := $m.sentiment
where "not"(is-null($m.sentiment)) and "not"(is-null($m.gender))
group by $g := $m.product_id[0] with $p, $s
return
{ "bucket": $g, "sentiment": avg($s), "male": avg($p) };

for $m in dataset TweetMetadata
where "not"(is-null($m.sentiment)) and "not"(is-null($m.gender))
group by $g := $m.product_id[0] with $m
return
{
  "bucket": $g,
  "sentiment": avg(for $x in $m return $x.sentiment),
  "male": avg(for $x in $m return $x.gender.MaleProb)
};
